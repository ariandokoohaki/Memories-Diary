# .github/workflows/ci-cd.yml

name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Linter
        run: |
          pip install flake8
          flake8 .  # Adjust the path as needed

      - name: Run Black Formatter Check
        run: |
          pip install black
          black --check .

      - name: Run isort Import Sort Check
        run: |
          pip install isort
          isort --check-only .

      - name: Run Tests
        run: |
          pip install pytest pytest-asyncio httpx pytest-cov
          pytest --cov=app --cov-report=xml tests/

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml

  build-push-docker:
    needs: build-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/memory-app:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/memory-app:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/memory-app:latest
          cache-to: type=inline

      - name: Notify Success
        if: success()
        run: echo "Docker image built and pushed successfully!"

      - name: Notify Failure
        if: failure()
        run: echo "Docker image build or push failed."
